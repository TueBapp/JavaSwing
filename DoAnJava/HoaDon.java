/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package DoAnJava;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class HoaDon extends javax.swing.JFrame {
    DefaultTableModel dfbang = new DefaultTableModel();
    /**
     * Creates new form HoaDon
     */
    public HoaDon() {
        initComponents();
        loadBang();
    }
     private void loadBang() {
    try {
        KetNoi con = new KetNoi();
        Connection conn = con.getConnection();
        int number;
        Vector row,column = null;
        column = new Vector();
        Statement st = conn.createStatement();
        ResultSet rs=st.executeQuery("Select Masach, Tensach,DGia from SACH");
        ResultSetMetaData metadata = rs.getMetaData();
        number = metadata.getColumnCount();
        for(int i =1;i<=number; i++){
            column.add(metadata.getColumnName(i));
            
        }
        dfbang.setColumnIdentifiers(column);
        while(rs.next()){
            row = new Vector();
            for(int i =1; i<=number;i++){
                row.addElement(rs.getString(i));
                
            }
            dfbang.addRow(row);
            tbbang.setModel(dfbang);
        }
         tbbang.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if( tbbang.getSelectedRow()>=0){
                   tbbang.getValueAt( tbbang.getSelectedRow(), 0);
                   tbbang.getValueAt( tbbang.getSelectedRow(), 1);
                   tbbang.getValueAt( tbbang.getSelectedRow(), 2);
                }
            }
        });
    } catch (Exception ex) {
        ex.printStackTrace();
    }

    }
     
     

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbbang1 = new javax.swing.JTable();
        btnGio = new javax.swing.JButton();
        btnThanh = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbbang = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        hoadon = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tbbang1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Masach", "Tensach", "DGia", "So luong"
            }
        ));
        jScrollPane1.setViewportView(tbbang1);

        btnGio.setBackground(new java.awt.Color(0, 153, 255));
        btnGio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/cart.png"))); // NOI18N
        btnGio.setText("Giỏ hàng");
        btnGio.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnGio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGioActionPerformed(evt);
            }
        });

        btnThanh.setBackground(new java.awt.Color(0, 153, 255));
        btnThanh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/pay.png"))); // NOI18N
        btnThanh.setText("Thanh Toán");
        btnThanh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 153, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete.png"))); // NOI18N
        jButton3.setText("Xóa");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        tbbang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Masach", "Tensach", "DGia"
            }
        ));
        jScrollPane2.setViewportView(tbbang);

        hoadon.setColumns(20);
        hoadon.setRows(5);
        jScrollPane3.setViewportView(hoadon);

        jButton1.setBackground(new java.awt.Color(255, 204, 204));
        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 204, 204));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/book.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Bảng Hóa Đơn");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnGio, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnThanh, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGio, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnThanh, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGioActionPerformed
        // TODO add your handling code here:
   DefaultTableModel modelSP = (DefaultTableModel) tbbang.getModel();
    DefaultTableModel modelCart = (DefaultTableModel) tbbang1.getModel();
    
    int selectedRow = tbbang.getSelectedRow();
    if (selectedRow >= 0) {
        Object maSPObj = modelSP.getValueAt(selectedRow, 0);
        Object tenSPObj = modelSP.getValueAt(selectedRow, 1);
        Object giaSPObj = modelSP.getValueAt(selectedRow, 2);

        // Debugging output
     

        if (maSPObj == null || tenSPObj == null || giaSPObj == null) {
            JOptionPane.showMessageDialog(this, "Selected row contains null values!");
            return;
        }
        
        String maSP = maSPObj.toString();
        String tenSP = tenSPObj.toString();
        int giaSP;
        try {
            giaSP = Integer.parseInt(giaSPObj.toString());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid price value in the selected row!");
            return;
        }
        
        boolean productExists = false;
        for (int i = 0; i < modelCart.getRowCount(); i++) {
            if (modelCart.getValueAt(i, 1).toString().equals(tenSP)) {
                int currentQuantity = Integer.parseInt(modelCart.getValueAt(i, 3).toString());
                modelCart.setValueAt(currentQuantity + 1, i, 3);
                productExists = true;
                break;
            }
        }
        
        if (!productExists) {
            modelCart.addRow(new Object[]{maSP, tenSP, giaSP, 1});
        }
       
    } else {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm để thêm vào giỏ hàng!");
    }
    
    }//GEN-LAST:event_btnGioActionPerformed
    public class NumberToWords {
    private static final String[] units = {
        "", "một", "hai", "ba", "bốn", "năm", "sáu", "bảy", "tám", "chín", "mười", 
        "mười một", "mười hai", "mười ba", "mười bốn", "mười lăm", "mười sáu", "mười bảy", 
        "mười tám", "mười chín"
    };

    private static final String[] tens = {
        "", // 0
        "", // 1
        "hai mươi", "ba mươi", "bốn mươi", "năm mươi", "sáu mươi", "bảy mươi", "tám mươi", "chín mươi"
    };

    public static String convert(final int n) {
        if (n < 0) {
            return "minus " + convert(-n);
        }

        if (n < 20) {
            return units[n];
        }

        if (n < 100) {
            return tens[n / 10] + ((n % 10 != 0) ? "-" + units[n % 10] : "");
        }

        if (n < 1000) {
            return units[n / 100] + " trăm" + ((n % 100 != 0) ? " " + convert(n % 100) : "");
        }

        if (n < 1000000) {
            return convert(n / 1000) + " ngàn" + ((n % 1000 != 0) ? " " + convert(n % 1000) : "");
        }

        if (n < 1000000000) {
            return convert(n / 1000000) + " triệu" + ((n % 1000000 != 0) ? " " + convert(n % 1000000) : "");
        }

        return convert(n / 1000000000) + " tỉ" + ((n % 1000000000 != 0) ? " " + convert(n % 1000000000) : "");
    }
}
    private void btnThanhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) tbbang1.getModel();

// Sử dụng HashMap để đếm số lượng mỗi sản phẩm
Map<String, Integer> productCount = new HashMap<>();
Map<String, Integer> productPrice = new HashMap<>();

// Kiểm tra số lượng cột trong bảng tbCart trước khi truy cập


for (int i = 0; i < model.getRowCount(); i++) {
    String tenSanPham = model.getValueAt(i, 1).toString();
    int giaSanPham = Integer.parseInt(model.getValueAt(i, 2).toString());
    int soLuongMua = Integer.parseInt(model.getValueAt(i, 3).toString()); // Lấy số lượng mua từ cột 4
    
    // Kiểm tra nếu sản phẩm chưa có trong productCount thì thêm vào
    if (!productCount.containsKey(tenSanPham)) {
        productCount.put(tenSanPham, soLuongMua);
        productPrice.put(tenSanPham, giaSanPham);
    } else {
        // Nếu sản phẩm đã tồn tại trong danh sách, cập nhật số lượng mua
        int currentCount = productCount.get(tenSanPham);
        productCount.put(tenSanPham, currentCount + soLuongMua);
    }
}

// Tạo StringBuilder để hiển thị thông tin
StringBuilder sb = new StringBuilder();
sb.append(centerText("|---Đơn hàng thanh toán---|", 40)).append("\n");
sb.append(centerText("--------------------------------------------", 40)).append("\n");

int totalAmount = 0;
for (String tenSanPham : productCount.keySet()) {
    int soLuongMua = productCount.get(tenSanPham);
    int giaSanPham = productPrice.get(tenSanPham);
    int thanhTien = giaSanPham * soLuongMua;
    
    totalAmount += thanhTien;
    
    sb.append(centerText("Tên Sách: " + tenSanPham, 40)).append("\n");
    sb.append(centerText("Giá sản phẩm: " + giaSanPham, 40)).append("\n");
    sb.append(centerText("Số lượng mua: " + soLuongMua, 40)).append("\n");
    
    sb.append(centerText("______________________", 40)).append("\n");
}
sb.append(centerText("Tong tien:"+totalAmount,40)).append("\n");
sb.append(centerText("Tổng tiền bằng chữ:"+NumberToWords.convert(totalAmount),40)).append("\n");
sb.append(centerText("*_________________________*",40)).append("\n");
// Hiển thị thông tin vào text area và căn giữa

// Hiển thị thông tin vào text area và căn giữa
hoadon.setText(sb.toString());
hoadon.setCaretPosition(0); // Đưa con trỏ về đầu văn bản để hiển thị tốt hơn

    }//GEN-LAST:event_btnThanhActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelCart = (DefaultTableModel) tbbang1.getModel();
    int selectedRow = tbbang1.getSelectedRow();
    
    if (selectedRow >= 0) {
        int response = JOptionPane.showConfirmDialog(
            this, 
            "Bạn có chắc chắn muốn hủy sản phẩm này không?", 
            "Xác nhận hủy sản phẩm", 
            JOptionPane.YES_NO_OPTION, 
            JOptionPane.QUESTION_MESSAGE
        );
        
        if (response == JOptionPane.YES_OPTION) {
            int currentQuantity = Integer.parseInt(modelCart.getValueAt(selectedRow, 3).toString());
            
            if (currentQuantity > 1) {
                modelCart.setValueAt(currentQuantity - 1, selectedRow, 3);
            } else {
                modelCart.removeRow(selectedRow);
            }
        }
        
    } else {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm để hủy mua!");
    }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         TrangChu TC = new TrangChu();
        TC.setVisible(true);
        // Close the current login form
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    private String centerText(String text, int par1) {
    int width = 40; // Chiều rộng tối đa của dòng
    int padding = (width - text.length()) / 2;
    StringBuilder sb = new StringBuilder();
    for (int i = 0; i < padding; i++) {
        sb.append(" ");
    }
    sb.append(text);
    return sb.toString();
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HoaDon().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGio;
    private javax.swing.JButton btnThanh;
    private javax.swing.JTextArea hoadon;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tbbang;
    private javax.swing.JTable tbbang1;
    // End of variables declaration//GEN-END:variables
}
